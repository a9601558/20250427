const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-pajoF9xF.js","assets/index-CjScWo3q.css"])))=>i.map(i=>d[i]);
import{_ as i}from"./index-pajoF9xF.js";const o=window.location.origin,S={QUESTION_SETS:`${o}/api/question-sets`,QUESTION_SET_BY_ID:t=>`${o}/api/question-sets/${t}`,QUESTIONS:`${o}/api/questions`,QUESTION_COUNT:t=>`${o}/api/questions/count/${t}`,BATCH_UPLOAD_QUESTIONS:t=>`${o}/api/questions/batch-upload/${t}`,USERS:`${o}/api/users`,LOGIN:`${o}/api/users/login`,REGISTER:`${o}/api/users/register`,HOMEPAGE:`${o}/api/homepage`},d={async getAllQuestionSets(){try{const{questionSetService:t}=await i(async()=>{const{questionSetService:s}=await import("./index-pajoF9xF.js").then(r=>r.a);return{questionSetService:s}},__vite__mapDeps([0,1])),e=await t.getAllQuestionSets();return e.success&&e.data?{success:!0,data:await Promise.all(e.data.map(async r=>{const n=await this.getQuestionCount(r.id);return{...r,questionCount:n}}))}:e}catch(t){return{success:!1,error:t.message}}},async getQuestionSetsByCategory(t){try{const{questionSetService:e}=await i(async()=>{const{questionSetService:s}=await import("./index-pajoF9xF.js").then(r=>r.a);return{questionSetService:s}},__vite__mapDeps([0,1]));return e.getQuestionSetsByCategory(t)}catch(e){return{success:!1,error:e.message}}},async getAllCategories(){try{const{questionSetService:t}=await i(async()=>{const{questionSetService:e}=await import("./index-pajoF9xF.js").then(s=>s.a);return{questionSetService:e}},__vite__mapDeps([0,1]));return t.getAllCategories()}catch(t){return{success:!1,error:t.message}}},async getQuestionSetById(t){try{const{questionSetService:e}=await i(async()=>{const{questionSetService:s}=await import("./index-pajoF9xF.js").then(r=>r.a);return{questionSetService:s}},__vite__mapDeps([0,1]));return e.getQuestionSetById(t)}catch(e){return{success:!1,error:e.message}}},async createQuestionSet(t){try{const{questionSetService:e}=await i(async()=>{const{questionSetService:s}=await import("./index-pajoF9xF.js").then(r=>r.a);return{questionSetService:s}},__vite__mapDeps([0,1]));return e.createQuestionSet(t)}catch(e){return{success:!1,error:e.message}}},async updateQuestionSet(t,e){try{const{questionSetService:s}=await i(async()=>{const{questionSetService:r}=await import("./index-pajoF9xF.js").then(n=>n.a);return{questionSetService:r}},__vite__mapDeps([0,1]));return s.updateQuestionSet(t,e)}catch(s){return{success:!1,error:s.message}}},async deleteQuestionSet(t){try{const{questionSetService:e}=await i(async()=>{const{questionSetService:s}=await import("./index-pajoF9xF.js").then(r=>r.a);return{questionSetService:s}},__vite__mapDeps([0,1]));return e.deleteQuestionSet(t)}catch(e){return{success:!1,error:e.message}}},async updateQuestionCount(t){try{return await(await fetch(`/api/question-sets/${t}/count`,{method:"PUT",headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}})).json()}catch(e){return{success:!1,error:e.message}}},async getQuestionCount(t){try{const e=await fetch(`/api/questions/count/${t}`);if(!e.ok)return console.error(`Error fetching question count: API returned ${e.status}`),0;const s=await e.json();return console.log(`Question count response for ${t}:`,s),s.count||0}catch(e){return console.error("Error getting question count:",e),0}},async batchAddQuestions(t,e){try{const s=localStorage.getItem("token");if(!s)return{success:!1,error:"Authentication required"};let r=null,n=0;e&&(e(10),r=window.setInterval(()=>{n+=5,n<90&&e(n)},500));const a=t.get("questionSetId");if(!a)return{success:!1,error:"No questionSetId provided"};console.log(`Sending batch upload request to: ${S.BATCH_UPLOAD_QUESTIONS(a)}`);const c=await fetch(S.BATCH_UPLOAD_QUESTIONS(a),{method:"POST",headers:{Authorization:`Bearer ${s}`},body:t});r!==null&&clearInterval(r),e&&e(100);const u=await c.json();return c.ok?(this.updateQuestionCount(a).catch(l=>console.error(`Failed to update question count for ${a}:`,l)),{success:!0,data:{success:u.successCount||0,failed:u.failedCount||0,errors:u.errors||[]},message:u.message||"Questions added successfully"}):{success:!1,error:u.message||`Server returned ${c.status}`}}catch(s){return{success:!1,error:s.message}}}};export{d as default,d as questionSetService};
